Infinite code:Finserv
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a non-negative integer n: ");
        int n = scanner.nextInt();

        printMultiplicationTable(n);
    }

    private static void printMultiplicationTable(int n) {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                int result = i * j;

                // Check if the result is a perfect square
                if (isPerfectSquare(result)) {
                    System.out.print("x\t");
                } else {
                    System.out.print(result + "\t");
                }
            }
            System.out.println();
        }
    }

    private static boolean isPerfectSquare(int num) {
        int sqrt = (int) Math.sqrt(num);
        return sqrt * sqrt == num;
    }
}



OutPut:
Enter a non-negative integer n: 4
x	2	3	x	
2	x	6	8	
3	6	x	12	
x	8	12	x	
-------------
fill  it with  print list of distinct cars in java using pambadas and streams in  the line  write your code here:

Explanation:In this code, flatMap is used to flatten the lists of cars from each employee into a single stream of cars.
Then distinct is used to get unique cars, and finally, collect is used to collect them into a list.
The result is printed, showing the distinct cars across all employees.


import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

class Solution {
    public static void main(String[] args) {
        List<Employee> empList = Employee.getEmployeeList();
        List<String> distinctCars = empList.stream()
                .flatMap(employee -> employee.getCars().stream())
                .distinct()
                .collect(Collectors.toList());

        System.out.println("Distinct Cars: " + distinctCars);
    }
}

class Employee {
    private long id;
    private String name;
    private List<String> cars;
    private double salary;

    public Employee(long id, String name, List<String> cars, double salary) {
        this.id = id;
        this.name = name;
        this.cars = cars;
        this.salary = salary;
    }

    public static List<Employee> getEmployeeList() {
        return Arrays.asList(
                new Employee(1, "A", Arrays.asList("Hyundai", "Kia", "Maruti"), 1000),
                new Employee(2, "B", Arrays.asList("Jeep", "Honda", "Maruti"), 2000),
                new Employee(3, "C", Arrays.asList("Honda", "Tata", "Nissan"), 2000)
        );
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<String> getCars() {
        return cars;
    }

    public void setCars(List<String> cars) {
        this.cars = cars;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}




























